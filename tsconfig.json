{
  "compilerOptions": {
    "target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": [
      "ES6"
    ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
    "module": "CommonJS" /* Specify what module code is generated. */,
    "moduleResolution": "Node",
    "rootDir": "./src" /* Specify the root folder within your source files. */,
    "resolveJsonModule": true,
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
    "declarationMap": true /* Create sourcemaps for d.ts files. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */,
    // "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    // "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "baseUrl": ".",
    "typeRoots": ["./src/@types", "./node_modules/@types"],
    "paths": {
      "@/*": ["./src/*"],
      "@/controllers/api/*": ["./src/controllers/api/*"],
      "@/controllers/*": ["./src/controllers/*"],
      "@/routes/*": ["./src/routes/*"],
      "@/routes/auth/*": ["./src/routes/api/auth/*"],
      "@/routes/user/*": ["./src/routes/api/user/*"]
    }
  }
}
